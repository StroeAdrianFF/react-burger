{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","React","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios","module","exports"],"mappings":"0KAmCeA,EAhCD,SAACC,GAEX,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAMtC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OACI,0BAAMC,MAAO,CAAEC,cAAe,aAAcC,QAAS,eAAgBC,OAAQ,QAASC,OAAQ,iBAAkBC,QAAS,OACrHC,IAAKP,EAAGJ,MACPI,EAAGJ,KAFR,IAGMI,EAAGH,OAHT,QAQR,OACI,yBAAKW,UAAWC,IAAQC,OACpB,2CAAiBZ,EAAjB,KACA,qCAAU,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,wCCnBpEC,E,kLAMEC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,U,+BAKtD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATKL,KAAKxB,MAAM8B,UACZF,EAASJ,KAAKxB,MAAM4B,OAAOrB,KAAI,SAAAR,GAAK,OAChC,kBAACmB,EAAD,CACIH,IAAKhB,EAAMgC,GACX9B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,YAKrB,6BACKO,O,GAvBII,IAAMC,WA8CZC,uBAhBS,SAAAC,GACpB,MAAO,CACHP,OAAQO,EAAMpC,MAAM6B,OACpBE,QAASK,EAAMpC,MAAM+B,QACrBJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,WAIA,SAAAU,GACvB,MAAO,CACHZ,cAAe,SAACC,EAAOC,GAAR,OAAmBU,EAASC,IAAoBZ,EAAOC,QAK/DO,CAA6CK,YAAiBhB,EAAQiB,O,mBCvDrFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.15733373.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return (\r\n            <span style={{ textTransform: 'capitalize', display: 'inline-block', margin: '0 8px', border: '1px solid #ccc', padding: '5px' }}\r\n                key={ig.name}>\r\n                {ig.name}\r\n                ({ig.amount})\r\n            </span>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput} </p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>)\r\n}\r\n\r\n\r\n\r\nexport default order;","import React from 'react';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\n\r\nclass Orders extends React.Component {\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n\r\n    render() {\r\n        let orders = <Spinner />\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} />\r\n            ))\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2Dx5Q\"};"],"sourceRoot":""}