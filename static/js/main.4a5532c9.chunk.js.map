{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Auxiliary/Auxiliary.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Modal/Modal.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Button/Button.js","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Spinner/Spinner.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","fetchIngredientsFailed","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","orders","fetchedOrder","key","push","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","authCheckState","getItem","module","exports","instance","create","baseURL","Modal","nextProps","nextState","show","this","clicked","modalClosed","className","classes","style","transform","opacity","React","Component","backdrop","onClick","Backdrop","button","disabled","Button","btnType","join","spinner","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","withRouter","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","Burger","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientRemoved","ingredientAdded","OrderButton","purchaseable","ordered","isAuth","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","updatePurchaseState","sum","purchaseHandler","isAuthenticated","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","disabledInfo","ings","burger","Spinner","onIngredientAdded","onIngredientRemoved","OrderSummary","connect","burgerBuilder","totalPrice","ingName","actions","logo","Logo","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","activeClassName","active","exact","navigationItems","NavigationItems","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","Content","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoSignup","routes","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","cheese","bacon","meat","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredients","reducer","loading","purchased","purchaseBurgerStart","purchaseBurgerSucces","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authRedirectPath","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.4a5532c9.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENTS';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENTS';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\n\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\n\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n\r\n}","const aux = (props) => props.children;\r\n\r\nexport default aux;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://burger-3c26b.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed)\r\n            })\r\n    }\r\n}","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error))\r\n            })\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(res => {\r\n                const fetchedOrder = [];\r\n                for (let key in res.data) {\r\n\r\n                    fetchedOrder.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrder));\r\n            })\r\n\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err))\r\n            })\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate')\r\n    localStorage.removeItem('userId')\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, expirationTime * 1000) //multiply 3600 * 1000\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {//we can do this because of redux-thunk...async\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBIIyo3CTZP-xKNaAlFuTo5lm04Rlm2V60'//set up default signup url\r\n        if (!isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBIIyo3CTZP-xKNaAlFuTo5lm04Rlm2V60'\r\n        }\r\n        axios.post(url, authData) // sign up/in for firebase....also we attach authData to it\r\n            .then(response => {//this is where we get our idtoken and localid token\r\n\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n                localStorage.setItem('token', response.data.idToken);//set token into localStorage\r\n                localStorage.setItem('expirationDate', expirationDate)\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId))\r\n                dispatch(checkAuthTimeout(response.data.expiresIn))\r\n            })\r\n            .catch(err => {\r\n\r\n                dispatch(authFail(err.response.data.error)); //err.response possible due to redux\r\n            })\r\n    };\r\n};\r\n\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if (expirationDate < new Date()) {\r\n                dispatch(logout())\r\n            } else {\r\n                const userId = localStorage.getItem('userId')\r\n                dispatch(authSuccess(token, userId))\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            }\r\n\r\n        }\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2cwog\",\"BreadTop\":\"BurgerIngredient_BreadTop__32Ifn\",\"Seeds1\":\"BurgerIngredient_Seeds1__1WgSl\",\"Seeds2\":\"BurgerIngredient_Seeds2__sFTpU\",\"Meat\":\"BurgerIngredient_Meat__1W105\",\"Cheese\":\"BurgerIngredient_Cheese__2VBB3\",\"Salad\":\"BurgerIngredient_Salad__1_OJh\",\"Bacon\":\"BurgerIngredient_Bacon__3wbp0\"};","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-3c26b.firebaseio.com/'\r\n});\r\n\r\n\r\n\r\nexport default instance;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__ntK5P\",\"Open\":\"SideDrawer_Open__1OGEe\",\"Close\":\"SideDrawer_Close__3RtWq\",\"Logo\":\"SideDrawer_Logo__2IgW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1m9sx\",\"Label\":\"BuildControl_Label__1PvPo\",\"Less\":\"BuildControl_Less__2pL2b\",\"More\":\"BuildControl_More__35Bh_\"};","import React from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n\r\nclass Modal extends React.Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop\r\n                    clicked={this.props.modalClosed}\r\n                    show={this.props.show} />\r\n                <div className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Modal; ","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div\r\n        onClick={props.clicked}\r\n        className={classes.Backdrop}>\r\n    </div> : null\r\n)\r\n\r\n\r\n\r\nexport default backdrop;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2J2xq\",\"Logo\":\"Toolbar_Logo__1HKae\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2pZC5\"};","import React from 'react';\r\nimport classes from './Button.module.css'\r\n\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n    >{props.children}</button>\r\n)\r\n\r\n\r\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1BvlQ\",\"OrderButton\":\"BuildControls_OrderButton__2GoQA\",\"enable\":\"BuildControls_enable__28lb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1TMHP\",\"Success\":\"Button_Success__14LaH\",\"Danger\":\"Button_Danger__3l9F4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__21JsZ\",\"active\":\"NavigationItem_active__3qtI2\"};","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\n\r\nexport default spinner;","import React from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends React.Component {\r\n\r\n\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error });\r\n            })\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor)\r\n            axios.interceptors.response.eject(this.resInterceptor)\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error} modalClosed={this.errorConfirmedHandler}>{this.state.error ? this.state.error.message : null}</Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default withErrorHandler;","import React from 'react';\r\nimport classes from '../BurgerIngredient/BurgerIngredient.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass BurgerIngredient extends React.Component {\r\n\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>; break;\r\n            case ('bread-top'):\r\n                ingredient = <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>; break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>; break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>; break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>; break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>; break;\r\n            default: ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n\r\n    }\r\n}\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default BurgerIngredient;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport classes from '../Burger/Burger.module.css'\r\nimport BurgerIngredient from '../Burger/BurgerIngredient/BurgerIngredient'\r\n\r\nimport { withRouter } from 'react-router-dom'; //hoc \r\n\r\nconst burger = (props) => {\r\n\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {//extract the key of a given object and turn them in an array\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        });\r\n\r\n\r\n    }).reduce((arr, el) => {//allows us to make an array into something else\r\n        return arr.concat(el)\r\n    }, []);\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients !</p>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"></BurgerIngredient>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"></BurgerIngredient>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default withRouter(burger); //acces .history property","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1_7k_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__-Gb5Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__19dfU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__x2l7F\",\"load2\":\"Spinner_load2__142WB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1dYfF\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3MZkH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__22qbY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3YSAO\"};","import React from 'react';\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\n\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\n\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' }\r\n\r\n];\r\n\r\n\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {\r\n            controls.map(ctrl => (\r\n                <BuildControl\r\n                    removed={() => props.ingredientRemoved(ctrl.type)}\r\n                    added={() => props.ingredientAdded(ctrl.type)}\r\n                    key={ctrl.label}\r\n                    label={ctrl.label}\r\n                    disabled={props.disabled[ctrl.type]}\r\n                />))\r\n        }\r\n\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchaseable}\r\n            onClick={props.ordered}\r\n        >{props.isAuth ? 'ORDER NOW!' : 'SIGN UP TO ORDER'}</button>\r\n\r\n    </div>\r\n)\r\n\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button'\r\n\r\n\r\n\r\nconst orderSummary = (props) => {\r\n\r\n    /*   componentWillUpdate(){\r\n          console.log('[OrderSummary will update]')\r\n      } */\r\n\r\n\r\n    const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\r\n        return (\r\n            < li key={igKey}>\r\n                <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {props.ingredients[igKey]}\r\n            </li >\r\n        )\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <Aux>\r\n            <h3>Your order</h3>\r\n            <p>A delicious burger with the following ingredients: </p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total price: {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to checkout ?</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\r\n\r\n        </Aux>\r\n    )\r\n\r\n};\r\n\r\n\r\n\r\nexport default orderSummary;","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\n\r\n\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nimport { connect } from 'react-redux'; //helps connect the store with this component\r\nimport * as actions from '../../store/actions/index'\r\n\r\n\r\n\r\n\r\n\r\nexport class BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        purchasing: false\r\n\r\n    }\r\n\r\n    //use componentDidMount to fetch data\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n\r\n\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)//array of string objects\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {//turn array in 1 number\r\n                return sum + el;\r\n            }, 0);\r\n        return sum > 0\r\n    }\r\n\r\n\r\n\r\n    //function(){} //wont trigger this properly\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({ purchasing: true, });\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout')\r\n            this.props.history.push('/auth')\r\n        }\r\n\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false, })\r\n    }\r\n\r\n\r\n    purchaseContinueHandler = () => {//AXIOS INSTANCE USED\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout')\r\n    }\r\n\r\n    render() {\r\n\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        isAuth={this.props.isAuthenticated}\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.price}\r\n                        purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n            />;\r\n        }\r\n        /* if (this.state.loading) {\r\n            orderSummary = <Spinner /> //check if loading to show spinner or not\r\n        } */\r\n\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React from 'react'\r\nimport burgerLogo from '../../assets/images/burger-logo.png' //dynamic image placing\r\nimport classes from './Logo.module.css'\r\n\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{ height: props.height }}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n)\r\n\r\n\r\nexport default logo;\r\n","import React from 'react';\r\nimport classes from './NavigationItem.module.css'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst navigationItem = (props) => (\r\n\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink to={props.link} activeClassName={classes.active} exact={props.exact}>{props.children}</NavLink>{/* used exact to have proper active links */}\r\n    </li>\r\n\r\n)\r\n\r\n\r\nexport default navigationItem;\r\n","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n        {!props.isAuthenticated ? <NavigationItem link=\"/auth\">Authentication</NavigationItem> : <NavigationItem link=\"/logout\">Log Out</NavigationItem>}\r\n    </ul>\r\n)\r\n\r\n\r\nexport default navigationItems;\r\n","import React from 'react'\r\nimport classes from './DrawerToggle.module.css';\r\n\r\n\r\n\r\n\r\nconst drawerToggle = (props) => (\r\n    <div onClick={props.clicked} className={classes.DrawerToggle}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\n\r\nexport default drawerToggle;\r\n","import React from 'react';\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n)\r\n\r\n\r\n\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport Logo from '../../../components/Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n\r\n\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open]\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth} />\r\n                </nav>\r\n\r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer;\r\n","import React from 'react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nclass Layout extends React.Component {\r\n\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({ showSideDrawer: false })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => { return { showSideDrawer: !prevState.showSideDrawer } })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Aux>\r\n                <Toolbar\r\n                    isAuth={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n\r\n            </Aux >\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);　","import React from 'react';\r\nimport * as actions from '../../../store/actions/index'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Logout extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onLogout()\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends React.Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            importComponent()\r\n                .then(cmp => {\r\n                    this.setState({ component: cmp.default });\r\n                });\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;","import React from 'react';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Layout from './hoc/Layout/Layout'\n\n\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\n\nimport Logout from './containers/Auth/Logout/Logout';\n\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index'\n\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n})\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n})\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n})\n\n\n\n\nclass App extends React.Component {\n\n\n  componentDidMount() {\n    this.props.onTryAutoSignup()\n  }\n\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={asyncAuth} />\n        <Route path=\"/\" component={BurgerBuilder} />\n        <Redirect to=\"/ \" />\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={asyncCheckout} />\n          <Route path=\"/orders\" component={asyncOrders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={asyncAuth} />\n          <Route path=\"/\" component={BurgerBuilder} />\n          <Redirect to=\"/ \" />\n        </Switch>\n      )\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility'\r\n\r\n\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n}\r\n\r\nconst INGREDIENT_PRICES = { //variabila globala \r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    bacon: 1.3,\r\n    meat: 0.7\r\n}\r\n\r\n\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,  //new ingredients object so we dont mutate the initial state\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedState);\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng)\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,  //new ingredients object so we dont mutate the initial state\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedSt);\r\n}\r\n\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    })\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, { error: true })\r\n\r\n}\r\n\r\n//create the reducer itself\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action)\r\n\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action)\r\n\r\n        /*  return {\r\n             ...state, //copy old state with spread operator\r\n             ingredients: { //new ingredients object so we dont mutate the initial state\r\n                 ...state.ingredients,\r\n                 [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n             },\r\n             totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n         }; */\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action)\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action)\r\n        default: return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility'\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, { purchased: false })\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, { loading: true })\r\n}\r\n\r\n\r\nconst purchaseBurgerSucces = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, { id: action.orderId })\r\n    return updateObject(state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat(newOrder)\r\n    })\r\n}\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, { loading: false });\r\n}\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n}\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, { orders: action.orders, loading: false })\r\n}\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, { loading: false })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action)\r\n\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action)\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSucces(state, action)\r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action)\r\n\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action)\r\n\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action)\r\n\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action)\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true })\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, { error: action.error, loading: false })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, { token: null, userId: null })\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action)\r\n\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action)\r\n\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\r\n\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action)\r\n\r\n        default: return state;\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom'; //routing\nimport { Provider } from 'react-redux'; //redux\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'; //create store\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\n\nimport thunk from 'redux-thunk'\nimport orderReducer from './store/reducers/order'\n\nimport authReducer from './store/reducers/auth'\n\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;//redux devtool only available in development mode\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n})\n\n//create store\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\n\n\n\nconst app = (\n  <Provider store={store}>{/* connect store with react app */}\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}